name: build-test-publish
on: push
jobs:
  build:
    if: ${{ github.ref_name == 'master' || github.ref_name == 'develop' }}
    runs-on: ubuntu-latest
    steps:
    - name: Dump context
      run: echo '${{ toJSON(github) }}'
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET toolchain
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Determine Release configuration
      if: ${{ github.ref_name == 'master' }}
      run: echo "CONFIGURATION=Release" >> $GITHUB_ENV
    - name: Determine Debug configuration
      if: ${{ github.ref_name == 'develop' }}
      run: echo "CONFIGURATION=Debug" >> $GITHUB_ENV
    - name: Install GitVersion
      run: dotnet tool install --global GitVersion.Tool --version 5.*
    - name: Determine package version
      run: echo "PACKAGE_VERSION=$(dotnet-gitversion /output json /showvariable FullSemVer)" >> $GITHUB_ENV
    - name: Generate assembly version
      run: dotnet-gitversion /l console /output buildserver /updateAssemblyInfo
    - name: Show variables
      run: |
        echo "Configuration: ${{ env.CONFIGURATION }}"
        echo "Package version: ${{ env.PACKAGE_VERSION }}"
    - name: Restore nuget packages
      run: dotnet restore --no-cache --verbosity minimal
    - name: Build solution
      run: dotnet build -c ${{ env.CONFIGURATION }} --no-restore --verbosity minimal
    - name: Pack solution
      run: dotnet pack --no-build -p:version=${{ env.PACKAGE_VERSION }} -o:packages -verbosity:minimal
    - name: Upload nuget packages
      uses: actions/upload-artifact@v3
      with:
        name: built-packages
        path: packages/*.nupkg
        if-no-files-found: error
