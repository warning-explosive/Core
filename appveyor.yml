#---------------------------------#
#      general configuration      #
#---------------------------------#

# branches to build
branches:
  # GitFlow whitelist
  only:
    - master
    - develop
    - /release-(\d)+.(\d)+.(\d)+/
    - /feature-(\d)+/
    - /hotfix-(\d)+.(\d)+.(\d)+/
    - /support-(\d)+.(\d)+.(\d)+/
    - /pull-request-(\d)+/

# Do not build on tags (GitHub, Bitbucket, GitLab, Gitea)
skip_tags: false

# Start builds on tags only (GitHub, BitBucket, GitLab, Gitea)
skip_non_tags: false

# Skipping commits with particular message
skip_commits:
  message: /\[DoNotBuild\]/                                                     # Regex for matching commit message

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: false

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019

# clone directory
clone_folder: c:\projects\Core

# fetch repository as zip archive
shallow_clone: false

# set clone depth
clone_depth: 5                                                                  # clone entire repository history if not defined

# scripts that run after cloning repository
install:
  - choco install gitversion.portable -pre -y

# enable patching of AssemblyInfo.* files
assembly_info:
  patch: false

# Automatically register private account and/or project AppVeyor NuGet feeds.
nuget:
  account_feed: true
  project_feed: true
  disable_publish_on_pr: true                                                   # disable publishing of .nupkg artifacts to account/project feeds for pull request builds

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration:
  - Debug
  - Release

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  parallel: true                                                                # enable MSBuild parallel builds
  project: Core.sln                                                             # path to Visual Studio solution or project
  publish_wap: false                                                            # package Web Application Projects (WAP) for Web Deploy
  publish_wap_xcopy: false                                                      # package Web Application Projects (WAP) for XCopy deployment
  publish_wap_beanstalk: false                                                  # Package Web Applications for AWS Elastic Beanstalk deployment
  publish_wap_octopus: false                                                    # Package Web Applications for Octopus deployment
  publish_azure_webjob: false                                                   # Package Azure WebJobs for Zip Push deployment
  publish_azure: false                                                          # package Azure Cloud Service projects and push to artifacts
  publish_aspnet_core: false                                                    # Package ASP.NET Core projects
  publish_core_console: false                                                   # Package .NET Core console projects
  publish_nuget: false                                                          # package projects with .nuspec files and push to artifacts
  publish_nuget_symbols: false                                                  # generate and publish NuGet symbol packages
  include_nuget_references: false                                               # add -IncludeReferencedProjects option while packaging NuGet artifacts

  # MSBuild verbosity level
  verbosity: detailed

# scripts to run before build
before_build:
- nuget restore
- ps: gitversion /l console /output buildserver /updateAssemblyInfo

# scripts to run after build (working directory and environment changes are persisted from the previous steps)
after_build:
#  - cmd: ECHO nuget pack <Project>\<NuSpec>.nuspec -version "%GitVersion_NuGetVersion%" -prop "target=%CONFIGURATION%"
#  - cmd: nuget pack <Project>\<NuSpec>.nuspec -version "%GitVersion_NuGetVersion%" -prop "target=%CONFIGURATION%"
#  - cmd: appveyor PushArtifact "<NuSpec>.%GitVersion_NuGetVersion%.nupkg"

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to run tests against only selected assemblies and/or categories
test:
  assemblies:
    only:
      - '**\*.Test.dll'

#---------------------------------#
#     deployment configuration    #
#---------------------------------#

deploy: off

#---------------------------------#
#         notifications           #
#---------------------------------#

notifications:
  # Email
  - provider: Email
    to:
      - '{{commitAuthorEmail}}'
    on_build_success: true
    on_build_failure: true
    on_build_status_changed: true
